//sfSig:{"sig": "3046022100c04cad48b4ce4e1adbf4255297a776a504d3433b2c73dd7cf590027c54c17c3302210095d8bf5171bce56a0055d9ac194f822a321fdb774b14c3f7f650613be8709ad7", "certPEM": "-----BEGIN CERTIFICATE-----$!$MIIDEDCCAregAwIBAgIBATAKBggqhkjOPQQDAjBsMQswCQYDVQQGEwJVSzEfMB0G$!$A1UECgwWQ29uZmlndXJlZCBUaGluZ3MgTHRkLjENMAsGA1UECwwEY3R4ZDEOMAwG$!$A1UECwwFVXNlcnMxHTAbBgNVBAMMFGN0eGQtdXNlcnMtYWRtaW5zLWNhMB4XDTI0$!$MDYwMzExMTAwOFoXDTM0MDYwMTExMTAwOFowYDELMAkGA1UEBhMCVUsxHzAdBgNV$!$BAoMFkNvbmZpZ3VyZWQgVGhpbmdzIEx0ZC4xDTALBgNVBAsMBGN0eGQxDjAMBgNV$!$BAsMBVVzZXJzMREwDwYDVQQDDAhjdC1hZG1pbjBZMBMGByqGSM49AgEGCCqGSM49$!$AwEHA0IABCjZimd9RAx9mgCZqN/nulM9XbCW5LitXZEsB5q137/ni0oT+xP9++oN$!$thjf+ZHfqu17QxDYFH7ePBowqgSMvUajggFUMIIBUDCBjgYIKwYBBQUHAQEEgYEw$!$fzBFBggrBgEFBQcwAoY5aHR0cDovL2N0eGQtdXNlcnMtYWRtaW5zLWNhLmN0eGQv$!$Y3R4ZC11c2Vycy1hZG1pbnMtY2EuY3J0MDYGCCsGAQUFBzABhipodHRwOi8vb2Nz$!$cC5jdHhkLXVzZXJzLWFkbWlucy1jYS5jdHhkOjkwODEwHwYDVR0jBBgwFoAUziKd$!$bNOAlDeXcUhjgD20RCV6hoMwDAYDVR0TAQH/BAIwADBKBgNVHR8EQzBBMD+gPaA7$!$hjlodHRwOi8vY3R4ZC11c2Vycy1hZG1pbnMtY2EuY3R4ZC9jdHhkLXVzZXJzLWFk$!$bWlucy1jYS5jcmwwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDgYDVR0PAQH/BAQDAgeA$!$MB0GA1UdDgQWBBRkb39EsCNet9szaVNeBd7x3Pyx1jAKBggqhkjOPQQDAgNHADBE$!$AiAdEsPC7OHYro6q4gIUb4fczPjjrd7LU0WO8L8ieYzT2AIgOK8l1vDSO7DTcG8+$!$UNocCDsaTUX2mnhWXI4tZhJaRU8=$!$-----END CERTIFICATE-----$!$", "description": "", "timestamp":"1717431144717", "timelimit":"0"}
//sfTimestamp:1717431144717
//sfLabel:/opt/ct/signing/files/Schemas/Watteco-Bob.sfjs
let 
    LORA_DEVICE: require('./Templates/lora.sfjt')
in
{
    mqtt: {

        //
        // Sensor Schema for Watteco BoB
        //
        "lora/**/Watteco-Bob/1/**": ($LORA_DEVICE << {
            payload: {
                type: object,
                properties: {
                    data: {
                        type: array,
                        items : [
                            {   
                                type: object,
                                properties: {
                                    date:  {type: string},
                                    label: {type: string},
                                    value: {type: number}
                                },
                                required: [date, label, value],
                                additionalProperties: false            
                            }
                        ],
                    },
                    fft: {
                        type: array,
                        items : [
                            {   
                                type: object,
                                properties: {
                                    date:  {type: string},
                                    label: {type: string},
                                    value: {type: number}
                                },
                                required: [date, label, value],
                                additionalProperties: false            
                            }
                        ],
                    },
                    header: {
                        type: object,
                        properties: {
                            sensor: {type: string, const:'KX'},
                            type:   {type: string, maxlength:20}
                        }
                    }
                },   
                additionalProperties: false,
                required: [data, header] 
            }   
        }).schema,

    }
}