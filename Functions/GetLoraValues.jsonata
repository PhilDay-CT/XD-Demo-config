//sfSig:{"sig": "304402203a9cc8c346956103bc5b28639400031809df655f9428b5b90daa0e5bcea47355022003e2a059ca96db23bf070218c3adab3bbbf9d9db0e3e14b2fc7de7b5e0782999", "certPEM": "-----BEGIN CERTIFICATE-----$!$MIIDEDCCAregAwIBAgIBATAKBggqhkjOPQQDAjBsMQswCQYDVQQGEwJVSzEfMB0G$!$A1UECgwWQ29uZmlndXJlZCBUaGluZ3MgTHRkLjENMAsGA1UECwwEY3R4ZDEOMAwG$!$A1UECwwFVXNlcnMxHTAbBgNVBAMMFGN0eGQtdXNlcnMtYWRtaW5zLWNhMB4XDTI0$!$MDYwMzExMTAwOFoXDTM0MDYwMTExMTAwOFowYDELMAkGA1UEBhMCVUsxHzAdBgNV$!$BAoMFkNvbmZpZ3VyZWQgVGhpbmdzIEx0ZC4xDTALBgNVBAsMBGN0eGQxDjAMBgNV$!$BAsMBVVzZXJzMREwDwYDVQQDDAhjdC1hZG1pbjBZMBMGByqGSM49AgEGCCqGSM49$!$AwEHA0IABCjZimd9RAx9mgCZqN/nulM9XbCW5LitXZEsB5q137/ni0oT+xP9++oN$!$thjf+ZHfqu17QxDYFH7ePBowqgSMvUajggFUMIIBUDCBjgYIKwYBBQUHAQEEgYEw$!$fzBFBggrBgEFBQcwAoY5aHR0cDovL2N0eGQtdXNlcnMtYWRtaW5zLWNhLmN0eGQv$!$Y3R4ZC11c2Vycy1hZG1pbnMtY2EuY3J0MDYGCCsGAQUFBzABhipodHRwOi8vb2Nz$!$cC5jdHhkLXVzZXJzLWFkbWlucy1jYS5jdHhkOjkwODEwHwYDVR0jBBgwFoAUziKd$!$bNOAlDeXcUhjgD20RCV6hoMwDAYDVR0TAQH/BAIwADBKBgNVHR8EQzBBMD+gPaA7$!$hjlodHRwOi8vY3R4ZC11c2Vycy1hZG1pbnMtY2EuY3R4ZC9jdHhkLXVzZXJzLWFk$!$bWlucy1jYS5jcmwwEwYDVR0lBAwwCgYIKwYBBQUHAwIwDgYDVR0PAQH/BAQDAgeA$!$MB0GA1UdDgQWBBRkb39EsCNet9szaVNeBd7x3Pyx1jAKBggqhkjOPQQDAgNHADBE$!$AiAdEsPC7OHYro6q4gIUb4fczPjjrd7LU0WO8L8ieYzT2AIgOK8l1vDSO7DTcG8+$!$UNocCDsaTUX2mnhWXI4tZhJaRU8=$!$-----END CERTIFICATE-----$!$", "description": "", "timestamp":"1717431144904", "timelimit":"0"}
//sfTimestamp:1717431144904
//sfLabel:/opt/ct/signing/files/Functions/GetLoraValues.jsonata

/* General function to get telemery values into a form    */
/* that can be sent to Thingsboard. Also adds flattened   */
/* toxicity values and gateway metadata                   */
/*                                                        */
/* Incomming data should be a JSON object                 */
/*                                                        */
/*    data.object.data: {                                 */
/*            key1: value,                                */
/*            key2: value,                                */
/*            ...                                         */
/*        },                                              */
/*                                                        */
(
    $ts := (input.data.ts)?input.data.ts:input.ts;
    $devID := input.data.deviceInfo.devEui;

    /* Get the signal metadata from each gatway */
    $gw_meta := input.data.rxInfo.{
        $join(["gateway","rssi",name], '.'): rssi,
        $join(["gateway","loRaSNR", name], '.'): loRaSNR
    }~>$merge;

    /* Build a flattend set of toxicity values */
    $tox := $each(input.toxicity, function ($v,$k) {
            ($v.toxic or $v.toxic = 0)?{
                $join(["toxicity", $k], '.'): $v.toxic
            }:$each($v, function($vv, $vk) {
                  {$join(["toxicity", $k, $vk], '.'): $vv.toxic}
            })~>$merge  
    })~>$merge;

    $values := $merge([
        $each(input.data.object, function($v,$k) {
            {
                $k: $v
            }
        }),
        $tox,
        $gw_meta,
        {"fCnt": input.data.fCnt},
        {"tx.frequency": input.data.txInfo.frequency},
        {"tx.dataRate":  input.data.txInfo.dr},
        {"toxicity": input.toxicity}
    ]);

    /* Adjust the data depending on whether */
    /* we have a Timestamp or not           */
    $data := ($ts)?{"ts": $ts, "values": $values}:$values; 

    {
        "outputs": {"default": {"devId": $devID, "data": $data}}
    }
)
